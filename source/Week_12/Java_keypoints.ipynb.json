{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Key concepts\n",
    "\n",
    "## Java Encapsulation\n",
    "\n",
    "source: https://www.w3schools.com/java/java_encapsulation.asp\n",
    "\n",
    "L'encapsulation sert à cacher les données sensibles des utilisateurs. Elle offre ainsi un meilleur contrôle des attributs ou méthodes d'une classe.\n",
    "\n",
    "En java, il suffit de déclarer les attributs des classes comme `private` et de mettre à disposition des utilisateurs des méthodes publiques `get ou set` pour qu'ils puissent accéder ou modifier la valeur des attributs privés.\n",
    "\n",
    "Les méthodes publiques `get ou set` doivent être nommées avec soit `get` soit `set` suivi du nom de l'attribut avec la 1ère lettre en majuscule. \n",
    "\n",
    "    getName()\n",
    "\n",
    "Le mot clé `this` fait référence à l'objet en question.\n",
    "\n",
    "\n",
    "### Exercise \n",
    "\n",
    "Complètez les deux cellules de code ci-dessous en vous aidant des commentaires.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "// déclarez une classe publique \"Person\"\n",
    "\n",
    "    //déclarez une variable privée \"name\" \n",
    "\n",
    "  // déclarez une méthode publique \"getName\"\n",
    "  \n",
    "\n",
    "  // déclarez une méthode publique void \"setName\"\n",
    "    \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "// déclarez une classe publique \"MyClass\"\n",
    "\n",
    "    //déclarez une méthode publique statique \"main\" \n",
    "   \n",
    "        // créez un nouvel objet \"Person\" nommé \"myObj\"\n",
    "      \n",
    "        // modifiez sa valeur de \"name\" avec la méthode \"setName\"\n",
    "   \n",
    "        // affichez sa valeur avec la méthode \"getName\"\n",
    "       \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Java Inheritence (Subclass and Superclass)\n",
    "\n",
    "source: https://www.w3schools.com/java/java_inheritance.asp\n",
    "\n",
    "Comme vous le savez, il est possible que des sous-classes héritent des attributs ou méthodes des super-classes.\n",
    "En Java, il faut utiliser le mot clé `extends`. Ainsi, l'héritage permet la réutilisation des attributs et méthodes d'une classe existante.\n",
    "\n",
    "### Exercise \n",
    "\n",
    "Complètez la cellule de code ci-dessous en vous aidant des commentaires. La classe `Car` est une sous-classe alors que la classe `Vehicle` est une super-classe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "// déclarez une classe \"Vehicle\"\n",
    "\n",
    "    //déclarez une variable protegée \"brand\" égale à \"Ford\" \n",
    "  \n",
    "    //déclarez une méthode publique void \"honk\"\n",
    "  \n",
    "    // affichez \"Tuut, tuut!\"\n",
    "      \n",
    "\n",
    "// déclarez une classe \"Car\" qui hérite de la classe \"Vehicle\"\n",
    "\n",
    "    //déclarez une variable privée \"modelName\" égale à \"Mustang\" \n",
    "  \n",
    "    \n",
    "    //déclarez une méthode publique statique \"main\" \n",
    "  \n",
    "\n",
    "        // créez un nouvel objet \"Car\" nommé \"myCar\"\n",
    "      \n",
    "\n",
    "        //appelez la méthode \"honk\" de la classe \"Vehicle\" sur \"myCar\"\n",
    "\n",
    "        \n",
    "        // affichez la \"brand\" et \"modelName\" de myCar\n",
    "   "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Java Polymorphism\n",
    "\n",
    "source: https://www.w3schools.com/java/java_polymorphism.asp\n",
    "\n",
    "Le polymorphisme apparaît quand plusieurs classes sont liées par héritage et que les méthodes héritées sont utilisées pour faire différentes tâches.\n",
    "\n",
    "\n",
    "### Exercise \n",
    "\n",
    "Complètez la cellule de code ci-dessous en vous aidant des commentaires. Les sous-classes d'`Animal` comme `Pig, Cat, Dog ou Bird` de la super-classe `Animal` redéfinissent la méthode `animalSound`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "// déclarez une super-classe \"Animal\"\n",
    "\n",
    "    //déclarez une méthode publique void \"animalSound\"\n",
    "\n",
    "        // affichez \"The animal makes a sound\"\n",
    "        \n",
    "// déclarez une classe \"Pig\" qui hérite de \"Animal\"\n",
    "\n",
    "    //déclarez une méthode publique void \"animalSound\" qui redéfinie celle de la super-classe \"Animal\"\n",
    "    \n",
    "        // affichez \"The pig says: wee wee\"\n",
    "        \n",
    "\n",
    "\n",
    "// déclarez une classe \"Dog\" qui hérite de \"Animal\"\n",
    "\n",
    "    //déclarez une méthode publique void \"animalSound\" qui redéfinie celle de la super-classe \"Animal\"\n",
    "   \n",
    "        // affichez \"The dog says: bow wow\"\n",
    "       \n",
    "// déclarez une classe \"MyMainClass\"\n",
    "\n",
    "    //déclarez une méthode publique statique \"main\" \n",
    "    \n",
    "        // créez un nouvel objet \"Animal\" nommé \"myAnimal\"\n",
    "         \n",
    "        // créez un nouvel objet \"Pig\" nommé \"myPig\"\n",
    "         \n",
    "        // créez un nouvel objet \"Dog\" nommé \"myDog\"\n",
    "          \n",
    "        //appelez la méthode \"animalSound\" avec \"myAnimal\"\n",
    "        \n",
    "        //appelez la méthode \"animalSound\" avec \" myPig\"\n",
    "      \n",
    "        //appelez la méthode \"animalSound\" avec \" myDog\"\n",
    "     "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Java Abstract Classes and Methods\n",
    "\n",
    "source: https://www.w3schools.com/java/java_abstract.asp\n",
    "\n",
    "L'abstraction sert uniquement à montrer que les informations essentielles aux utilisateurs. En Java, il suffit de déclarer des classes ou interfaces abstraites pour utiliser le concept d'abstraction. Les classes abstraites ne peuvent pas créer des objets sauf si elles héritent d'autres classes.\n",
    "\n",
    "Les méthodes abstraites, ayant généralement pas de contenu car il est hérité de la sous-classe, peuvent uniquement être utilisées dans les classes abstraites."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "// déclarez une classe abstraite \"Animal\"\n",
    "\n",
    "    //déclarez une méthode  vide publique abstraite void \"animalSound\"\n",
    "\n",
    "    //déclarez une méthode publique void \"sleep\"\n",
    "    \n",
    "        // affichez \"Zzz\"\n",
    "       \n",
    "\n",
    "// déclarez une classe \"Pig\" qui hérite de \"Animal\"\n",
    "\n",
    "    //déclarez une méthode publique void \"animalSound\" qui redéfinie celle de la super-classe \"Animal\"\n",
    "    \n",
    "        // affichez \"The pig says: wee wee\"\n",
    "       \n",
    "// déclarez une classe \"MyMainClass\"\n",
    "\n",
    "    //déclarez une méthode publique statique \"main\" \n",
    "   \n",
    "        // créez un nouvel objet \"Pig\" nommé \"myPig\"\n",
    "        \n",
    "        //appelez la méthode \"animalSound\" avec \" myPig\"\n",
    "        \n",
    "        //appelez la méthode \"sleep\" avec \" myPig\"\n",
    "     "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Java",
   "language": "java",
   "name": "java"
  },
  "language_info": {
   "codemirror_mode": "text/x-java",
   "file_extension": ".java",
   "mimetype": "",
   "name": "Java",
   "nbconverter_exporter": "",
   "version": "1.8.0_222"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": false,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": false,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
